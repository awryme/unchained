version: 3

tasks:
  build-bin-linux:
    internal: true
    desc: "reusable build task"
    env:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 0
    cmd: go build -v -tags with_reality_server -o ./bin/$GOOS-$GOARCH/{{ .APP }} ./cmd/{{ .APP }}/

  build-unchained:
    desc: "build `unchained` app"
    deps: [run-tests]
    cmds:
      - task: build-only
        vars:
          APP: unchained

  build-unchained-worker:
    desc: "build `unchained-worker` app"
    deps: [run-tests]
    cmds:
      - task: build-only
        vars:
          APP: unchained-worker

  build-all-linux:
    desc: "build all apps for linux"
    deps: [run-tests]
    cmds:
      - for: [unchained, unchained-worker]
        task: build-only
        vars:
          APP: "{{ .ITEM }}"
          GOOS: linux
          GOARCH: amd64
          BINDDIR: linux-amd64

  build-only:
    internal: true
    desc: "build {{ .APP }} for specific platform"
    env:
      GOOS: "{{ .GOOS }}"
      GOARCH: "{{ .GOARCH }}"
      CGO_ENABLED: 0
    cmd: go build -v -tags with_reality_server -o ./bin/{{ .BINDDIR }}/{{ .APP }} ./cmd/{{ .APP }}/

  run-tests:
    desc: "run go test"
    cmd: go test -v ./...
